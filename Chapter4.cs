using UnityEngine;

// 데이터의 형변환
public class Chapter4 : MonoBehaviour
{
    void Start()
    {
        // 데이터의 형변환이란?
        // -> (변수에 담겨 있는) 데이터를 다른 데이터 타입의 변수에 옮겨 담는 것
        // - 크기(값의 범위)가 서론 다른 숫자 사이의 변환
        // - 부호 있는 정수와 부호 없는 정수 사이의 변환
        // - 실수와 정수 사이의 변환
        // - 문자(열)와 숫자 사이의 변환

        int money = 1700000000;


        // 암시적 형변환
        // 작은 범위의 자료형에서 더 큰 범위의 자료형으로 변환할때는
        // 자동으로 티나지 않게 일어난다.
        long myMoney = money; // 17억
        myMoney = 37000000000;

        // 더 작은 범위로 변환할때는 형변환을 "명확"하게 표현해줘야 한다.
        short yourMoney = (short)money;
        // Q. 나의 16억은 어디로 갔을까?
        // A. 오버플로우, 언더플로우를 공부하세요.


        // 문자열 -> 숫자 형변환
        // 엑셀/메모장/JSON/DB 같은곳에 데이터를 문자(열)로 표기하고
        // 읽어들일때가 있다.. 
        string age = "17";
        int myAge = int.Parse(age); // 문자를 숫자로 바꿔주는 함수
        // ----------- 성공 여부에따라 이 아래 코드들이 실행 안될수도 있다.---
        print(myAge);
        // 정리: 박싱-언박싱 정리하기
        // 과제 : 게임 개발에서 주로 언제 박싱-언방식이 일어나는지 사례를 찾자.

        // 숫자 -> 문자열 형변환 
        // ToString() 메서드를 이용한다.
        int height = 190;
        string height2 = height.ToString();
        print(height2);
    }

}
