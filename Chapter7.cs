using UnityEngine;


// 제어문
// 지금까지 우리가 배운 코드는 위에서 아래로 실행되는 흐름을 가지고 있다. -> 순차적
// 이 순차적인 흐름에 변화(제어)를 주는것이 바로 '제어문' (-> 코드의 흐름을 제어한다.)
// 제어문의 종류는
// - 1. 조건문
// - 2. 분기문
// - 3. 반복문

public class Chapter7 : MonoBehaviour
{
    void Start() // Main
    {
        // 피카추의 체력
        int health = 100;
        
        // 롱스톤의 대미지
        int damage = 90;

        health -= damage;
        Debug.Log("피카추의 남은 체력: " + health.ToString()); // 피카추의 남은 체력: 10

        // 1. 조건문(if, else if, else)
        // 조건에 따라 코드 뭉치를 실행할지 말지 정하는 문법
        //  ㄴ 조건: 비교/논리 연산에 True/false 

        // 조건: 만약에 체력이 0보다 같거나 작다면~
        // if(조건식) { ... } : 만약 ~라면? ~한다.
        if (health <= 0)
        {   // ㄴ이 조건이 true일때만 아래 중괄호 범위({})의 코드가 실행된다.

            Debug.Log("피카추 체력이 0보다 작아져서 게임 오버!");
        }
        else if(health > 50) // 그렇지 않고 ~라면 ~한다.
        {
            Debug.Log("아직 든든하다!");
        }
        else // (체력이 0보다 크다면) // 위 조건을 만족하지 못한 경우 // 이도저도 아닐경우 실행된다.
        {
            // 만약에 체력이 10 이하라면...
            // 중첩 조건문
            if (health <= 10)
            { 
                Debug.Log("곧 죽을듯하다...");
            }

            Debug.Log("다행히 살아남았다!");
        }
    }
}
